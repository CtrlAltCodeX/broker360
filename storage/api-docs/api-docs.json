{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API documentation for the login endpoint",
        "contact": {
            "email": "contact@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/cards": {
            "get": {
                "tags": [
                    "Card"
                ],
                "summary": "Get a list of cards",
                "operationId": "0c814df18968ec1f04dcf0459f080930",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cards retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Card"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Card"
                ],
                "summary": "Store a newly created card",
                "operationId": "69374d74948bede528fba37906472969",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "number",
                                    "expiry",
                                    "cvv",
                                    "frequency"
                                ],
                                "properties": {
                                    "number": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1234567812345678"
                                    },
                                    "expiry": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "12/24"
                                    },
                                    "cvv": {
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "frequency": {
                                        "type": "string",
                                        "example": "monthly"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Card saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Card"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/contacts": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get list of contacts",
                "description": "Returns list of contacts",
                "operationId": "getContactsList",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Number of records to skip",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Store a newly created Contact in storage",
                "operationId": "d01f7866c71a36e65b23f0be79595060",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": "Manager"
                                    },
                                    "company": {
                                        "type": "string",
                                        "example": "Company Inc."
                                    },
                                    "fountain": {
                                        "type": "string",
                                        "example": "Source"
                                    },
                                    "number": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "twitter": {
                                        "type": "string",
                                        "example": "@johndoe"
                                    },
                                    "linkedin": {
                                        "type": "string",
                                        "example": "linkedin.com/in/johndoe"
                                    },
                                    "skype": {
                                        "type": "string",
                                        "example": "johndoe_skype"
                                    },
                                    "website": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://www.example.com"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, Anytown, USA"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Description of the contact"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "example": "Manager"
                                                },
                                                "company": {
                                                    "type": "string",
                                                    "example": "Company Inc."
                                                },
                                                "fountain": {
                                                    "type": "string",
                                                    "example": "Source"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.doe@example.com"
                                                },
                                                "twitter": {
                                                    "type": "string",
                                                    "example": "@johndoe"
                                                },
                                                "linkedin": {
                                                    "type": "string",
                                                    "example": "linkedin.com/in/johndoe"
                                                },
                                                "skype": {
                                                    "type": "string",
                                                    "example": "johndoe_skype"
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://www.example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Main St, Anytown, USA"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Description of the contact"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts/{id}": {
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update an existing contact",
                "description": "Updates a contact by ID",
                "operationId": "updateContact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of contact to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContactRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete an existing contact",
                "description": "Deletes a contact by ID",
                "operationId": "deleteContact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of contact to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mails": {
            "post": {
                "tags": [
                    "Mail"
                ],
                "summary": "Store a newly created Mail",
                "operationId": "b87a5b9b0c2697609bc4ac3386784f85",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "to",
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "to": {
                                        "type": "string",
                                        "example": "example@example.com"
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "Subject of the mail"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Message content here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mail saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "example": "example@example.com"
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Subject of the mail"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Message content here"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-21T15:30:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-21T15:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mail saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mails/{id}": {
            "delete": {
                "tags": [
                    "Mail"
                ],
                "summary": "Remove the specified Mail from storage",
                "operationId": "88eb2f610c7290bd845fca28a98fa52e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Mail to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mail deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mail deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mail not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mail not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/plans": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "Display a listing of the Plans",
                "operationId": "1d9df9f5b7f06bbb7198d9437cdec1eb",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plans retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Plan"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Plans"
                ],
                "summary": "Store a newly created Plan in storage",
                "operationId": "5899c91b953558fafbe558b86bf18b58",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "users",
                                    "website",
                                    "payment_method",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "users": {
                                        "type": "integer"
                                    },
                                    "website": {
                                        "type": "string"
                                    },
                                    "payment_method": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Plan saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/properties": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Display a listing of the Properties",
                "operationId": "11abae22bcd6e3c7ffb95f6f860d73e9",
                "parameters": [
                    {
                        "name": "s",
                        "in": "query",
                        "description": "Search term to filter properties",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Number of records to skip",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records to return",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Properties retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Property"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Store a newly created Property in storage",
                "operationId": "3605c634328149727ebf75550696f387",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "ad_type",
                                    "operation_type"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "residential"
                                    },
                                    "ad_type": {
                                        "type": "string",
                                        "example": "sale"
                                    },
                                    "ad_desc": {
                                        "type": "string",
                                        "example": "Beautiful house with garden"
                                    },
                                    "operation_type": {
                                        "type": "string",
                                        "example": "rent"
                                    },
                                    "show_price_ad": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "bedroom": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "bathrooms": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "half_bath": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "parking_lots": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "construction": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.5
                                    },
                                    "year_construction": {
                                        "type": "integer",
                                        "example": 2015
                                    },
                                    "number_plants": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "number_floors": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "monthly_maintence": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.75
                                    },
                                    "internal_key": {
                                        "type": "string",
                                        "example": "INT123"
                                    },
                                    "key_code": {
                                        "type": "string",
                                        "example": "KEY456"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "street": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "corner_with": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "postal_code": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "property_features": {
                                        "type": "integer",
                                        "example": "Features"
                                    },
                                    "share_commission": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "commission_percent": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "condition_sharing": {
                                        "type": "integer",
                                        "example": "Sharing"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "longitude_latitude": {
                                        "type": "string",
                                        "example": "Sharing"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "residential"
                                                },
                                                "ad_type": {
                                                    "type": "string",
                                                    "example": "sale"
                                                },
                                                "ad_desc": {
                                                    "type": "string",
                                                    "example": "Beautiful house with garden"
                                                },
                                                "operation_type": {
                                                    "type": "string",
                                                    "example": "rent"
                                                },
                                                "show_price_ad": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "bedroom": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "bathrooms": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "half_bath": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "parking_lots": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "construction": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.5
                                                },
                                                "year_construction": {
                                                    "type": "integer",
                                                    "example": 2015
                                                },
                                                "number_plants": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "number_floors": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "monthly_maintence": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150.75
                                                },
                                                "internal_key": {
                                                    "type": "string",
                                                    "example": "INT123"
                                                },
                                                "key_code": {
                                                    "type": "string",
                                                    "example": "KEY456"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "street": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "corner_with": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "postal_code": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "property_features": {
                                                    "type": "integer",
                                                    "example": "Features"
                                                },
                                                "share_commission": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "commission_percent": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "condition_sharing": {
                                                    "type": "integer",
                                                    "example": "Sharing"
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "longitude_latitude": {
                                                    "type": "string",
                                                    "example": "Sharing"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-21T13:45:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-21T13:45:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/properties/{id}": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Display the specified Property",
                "description": "Get the details of a specific property by its ID.",
                "operationId": "showProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "residential"
                                                },
                                                "ad_type": {
                                                    "type": "string",
                                                    "example": "sale"
                                                },
                                                "ad_desc": {
                                                    "type": "string",
                                                    "example": "Beautiful house with garden"
                                                },
                                                "operation_type": {
                                                    "type": "string",
                                                    "example": "rent"
                                                },
                                                "show_price_ad": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "bedroom": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "bathrooms": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "half_bath": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "parking_lots": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "construction": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 120.5
                                                },
                                                "year_construction": {
                                                    "type": "integer",
                                                    "example": 2015
                                                },
                                                "number_plants": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "number_floors": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "monthly_maintence": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150.75
                                                },
                                                "internal_key": {
                                                    "type": "string",
                                                    "example": "INT123"
                                                },
                                                "key_code": {
                                                    "type": "string",
                                                    "example": "KEY456"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "street": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "corner_with": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "postal_code": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "property_features": {
                                                    "type": "integer",
                                                    "example": "Features"
                                                },
                                                "share_commission": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "commission_percent": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "condition_sharing": {
                                                    "type": "integer",
                                                    "example": "Sharing"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-21T13:45:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-21T13:45:00Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/{id}": {
            "put": {
                "tags": [
                    "Properties"
                ],
                "summary": "Update the specified Property in storage",
                "operationId": "0106cabf9f2482c98e17b0779d642432",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Property to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "ad_type",
                                    "ad_desc",
                                    "operation_type",
                                    "show_price_ad",
                                    "bedroom",
                                    "bathrooms",
                                    "half_bath",
                                    "parking_lots",
                                    "construction",
                                    "year_construction",
                                    "number_plants",
                                    "number_floors",
                                    "monthly_maintence",
                                    "internal_key",
                                    "key_code",
                                    "user_id",
                                    "street",
                                    "corner_with",
                                    "postal_code",
                                    "property_features",
                                    "share_commission",
                                    "commission_percent",
                                    "condition_sharing"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "House"
                                    },
                                    "ad_type": {
                                        "type": "string",
                                        "example": "Sale"
                                    },
                                    "ad_desc": {
                                        "type": "string",
                                        "example": "A beautiful house"
                                    },
                                    "operation_type": {
                                        "type": "string",
                                        "example": "Rent"
                                    },
                                    "show_price_ad": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "bedroom": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "bathrooms": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "half_bath": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "parking_lots": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "construction": {
                                        "type": "string",
                                        "example": "Brick"
                                    },
                                    "year_construction": {
                                        "type": "integer",
                                        "example": 2020
                                    },
                                    "number_plants": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "number_floors": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "monthly_maintence": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.75
                                    },
                                    "internal_key": {
                                        "type": "string",
                                        "example": "INT123"
                                    },
                                    "key_code": {
                                        "type": "string",
                                        "example": "KC456"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "street": {
                                        "type": "string",
                                        "example": "Main St"
                                    },
                                    "corner_with": {
                                        "type": "string",
                                        "example": "1st Ave"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "property_features": {
                                        "type": "string",
                                        "example": "Features"
                                    },
                                    "share_commission": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "commission_percent": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5.5
                                    },
                                    "condition_sharing": {
                                        "type": "string",
                                        "example": "Sharing conditions"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Property"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/properties/images": {
            "post": {
                "tags": [
                    "Property Images"
                ],
                "summary": "Store property images",
                "description": "Uploads and stores property images.",
                "operationId": "8b34cb671ea48a841c86103dfc40ca9c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "property_image",
                                    "property_id"
                                ],
                                "properties": {
                                    "property_image": {
                                        "description": "Array of property images to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "property_id": {
                                        "description": "ID of the property",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property images inserted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "example": "/storage/property_image/1623847527.jpg"
                                                    },
                                                    "property_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property images inserted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/properties/{id}/images": {
            "get": {
                "tags": [
                    "Property Images"
                ],
                "summary": "Get property images",
                "description": "Retrieve all images for a specific property by its ID",
                "operationId": "4bcf9189afd53e7095af8ae96774f83a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All Property images"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "example": "http://example.com/images/1.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/properties/{id}/user": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Retrieve property by user ID",
                "description": "Retrieve property by user ID",
                "operationId": "bd442a205fa5d6c329c7cde74a2cdc86",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Property"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found"
                    }
                }
            }
        },
        "/api/properties/{id}/status": {
            "put": {
                "tags": [
                    "Properties"
                ],
                "summary": "Update the status of a property",
                "description": "Update the status of a property by its ID",
                "operationId": "d7203855cbc69874def379204b45cd6c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "1",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property status updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property status updated"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Property"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/property-boards": {
            "get": {
                "tags": [
                    "PropertyBoards"
                ],
                "summary": "Get list of property boards",
                "description": "Returns list of property boards",
                "operationId": "getPropertyBoardsList",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Number of records to skip",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyBoard"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "PropertyBoards"
                ],
                "summary": "Store a newly created PropertyBoards in storage",
                "operationId": "storePropertyBoards",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePropertyBoardsAPIRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property Boards saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PropertyBoard"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Property Boards saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Store a newly created Task",
                "description": "Store a newly created Task in storage",
                "operationId": "storeTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "desc",
                                    "date",
                                    "time",
                                    "assigned_to",
                                    "category",
                                    "link"
                                ],
                                "properties": {
                                    "desc": {
                                        "type": "string",
                                        "example": "Task description"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-06-05"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30:00"
                                    },
                                    "assigned_to": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Work"
                                    },
                                    "link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "http://example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a task by ID",
                "description": "Returns a task with specified ID",
                "operationId": "getTaskById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "desc": {
                                                    "type": "string",
                                                    "example": "Task description"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-06-05"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "14:00:00"
                                                },
                                                "assigned_to": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Development"
                                                },
                                                "link": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://example.com/task/1"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update the specified Task",
                "operationId": "f4682fc7b9a2ad8f67eba9796a23a788",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "desc": {
                                        "type": "string"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "assigned_to": {
                                        "type": "string"
                                    },
                                    "category": {
                                        "type": "string"
                                    },
                                    "link": {
                                        "type": "string",
                                        "format": "url"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Remove the specified Task",
                "operationId": "3d497bbc5193180fb2e1407b4920d9de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/user/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get tasks by user ID",
                "description": "Returns tasks for the specified user ID",
                "operationId": "getTasksByUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user whose tasks to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "desc": {
                                                        "type": "string",
                                                        "example": "Task description"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-06-05"
                                                    },
                                                    "time": {
                                                        "type": "string",
                                                        "format": "time",
                                                        "example": "14:00:00"
                                                    },
                                                    "assigned_to": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "Development"
                                                    },
                                                    "link": {
                                                        "type": "string",
                                                        "format": "url",
                                                        "example": "http://example.com/task/1"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "b37ed7422332faa2deb124073d0338b7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "number": {
                                        "type": "string",
                                        "example": "987654321"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "admin123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        },
                                                        "number": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        },
                                                        "password": {
                                                            "type": "string",
                                                            "example": "admin123"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update the specified User in storage.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserAPIRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "6d196eb99f855a1b46f47f5ed8ba40ce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "JWT token"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User login successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid email or password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/forget-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send OTP to email for password reset",
                "operationId": "54fdb4f58f53c4fb6653c1cb80ed0ed8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password using OTP",
                "operationId": "717f2ce41afc56409f4434e0ba098298",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "1234"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully changed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password successfully changed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/current/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get Current User",
                "description": "Returns the current authenticated user",
                "operationId": "f07fa19bf75337cdf6a270d6eeeb05c9",
                "responses": {
                    "200": {
                        "description": "Current User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Updated User"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        },
                                                        "number": {
                                                            "type": "integer",
                                                            "example": "987456321"
                                                        },
                                                        "agency_name": {
                                                            "type": "string",
                                                            "example": "Example Agency"
                                                        },
                                                        "lang": {
                                                            "type": "string",
                                                            "example": "English"
                                                        },
                                                        "timezone": {
                                                            "type": "string",
                                                            "example": "Timezone"
                                                        },
                                                        "profile_url": {
                                                            "type": "object",
                                                            "example": "{}"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Current User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Please Login!!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please Login!!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Card": {
                "required": [
                    "number",
                    "expiry",
                    "cvv",
                    "frequency"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "number": {
                        "type": "string",
                        "format": "number",
                        "example": "1234567812345678"
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date",
                        "example": "12/24"
                    },
                    "cvv": {
                        "type": "string",
                        "example": "123"
                    },
                    "frequency": {
                        "type": "string",
                        "example": "monthly"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Contact": {
                "title": "Contact",
                "required": [
                    "name",
                    "last_name"
                ],
                "properties": {
                    "name": {
                        "description": "First name of the contact",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name of the contact",
                        "type": "string"
                    },
                    "position": {
                        "description": "Position of the contact in the company",
                        "type": "string"
                    },
                    "company": {
                        "description": "Company name",
                        "type": "string"
                    },
                    "fountain": {
                        "description": "Fountain details",
                        "type": "string"
                    },
                    "number": {
                        "description": "Contact number",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string"
                    },
                    "twitter": {
                        "description": "Twitter handle",
                        "type": "string"
                    },
                    "linkedin": {
                        "description": "LinkedIn profile",
                        "type": "string"
                    },
                    "skype": {
                        "description": "Skype ID",
                        "type": "string"
                    },
                    "website": {
                        "description": "Website URL",
                        "type": "string"
                    },
                    "address": {
                        "description": "Contact address",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description or notes about the contact",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateContactRequest": {
                "properties": {
                    "name": {
                        "description": "First name of the contact",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name of the contact",
                        "type": "string"
                    },
                    "position": {
                        "description": "Position of the contact in the company",
                        "type": "string"
                    },
                    "company": {
                        "description": "Company name",
                        "type": "string"
                    },
                    "fountain": {
                        "description": "Fountain details",
                        "type": "string"
                    },
                    "number": {
                        "description": "Contact number",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string"
                    },
                    "twitter": {
                        "description": "Twitter handle",
                        "type": "string"
                    },
                    "linkedin": {
                        "description": "LinkedIn profile",
                        "type": "string"
                    },
                    "skype": {
                        "description": "Skype ID",
                        "type": "string"
                    },
                    "website": {
                        "description": "Website URL",
                        "type": "string"
                    },
                    "address": {
                        "description": "Contact address",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description or notes about the contact",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Plan": {
                "title": "Plan",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "users": {
                        "type": "integer"
                    },
                    "website": {
                        "type": "string"
                    },
                    "payment_method": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Property": {
                "title": "Property",
                "required": [
                    "type",
                    "ad_type",
                    "ad_desc",
                    "operation_type"
                ],
                "properties": {
                    "type": {
                        "description": "The type of the property",
                        "type": "string"
                    },
                    "ad_type": {
                        "description": "The type of ad",
                        "type": "string"
                    },
                    "ad_desc": {
                        "description": "The description of the ad",
                        "type": "string"
                    },
                    "operation_type": {
                        "description": "The type of operation",
                        "type": "string"
                    },
                    "show_price_ad": {
                        "description": "Whether to show the price in the ad",
                        "type": "boolean"
                    },
                    "bedroom": {
                        "description": "The number of bedrooms",
                        "type": "integer"
                    },
                    "bathrooms": {
                        "description": "The number of bathrooms",
                        "type": "integer"
                    },
                    "half_bath": {
                        "description": "The number of half bathrooms",
                        "type": "integer"
                    },
                    "parking_lots": {
                        "description": "The number of parking lots",
                        "type": "integer"
                    },
                    "construction": {
                        "description": "The construction size",
                        "type": "integer"
                    },
                    "year_construction": {
                        "description": "The year of construction",
                        "type": "integer"
                    },
                    "number_plants": {
                        "description": "The number of plants",
                        "type": "integer"
                    },
                    "number_floors": {
                        "description": "The number of floors",
                        "type": "integer"
                    },
                    "monthly_maintence": {
                        "description": "The monthly maintenance cost",
                        "type": "number",
                        "format": "float"
                    },
                    "internal_key": {
                        "description": "The internal key",
                        "type": "string"
                    },
                    "key_code": {
                        "description": "The key code",
                        "type": "string"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "street": {
                        "description": "Street",
                        "type": "string"
                    },
                    "corner_with": {
                        "description": "Cornor ",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "Postal Code",
                        "type": "integer"
                    },
                    "property_features": {
                        "description": "property_features",
                        "type": "string"
                    },
                    "share_commission": {
                        "description": "share_commission",
                        "type": "integer"
                    },
                    "commission_percent": {
                        "description": "commission_percent",
                        "type": "integer"
                    },
                    "condition_sharing": {
                        "description": "condition_sharing",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatePropertyBoardsAPIRequest": {
                "required": [
                    "property_name",
                    "property_value"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PropertyBoard": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Task": {
                "title": "Task",
                "description": "Task model",
                "properties": {
                    "id": {
                        "description": "Task ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Task name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Task description",
                        "type": "string"
                    },
                    "status": {
                        "description": "Task status",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UpdateUserAPIRequest": {
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Updated User"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "number": {
                        "type": "integer",
                        "example": "987456321"
                    },
                    "agency_name": {
                        "type": "string",
                        "example": "Example Agency"
                    },
                    "lang": {
                        "type": "string",
                        "example": "English"
                    },
                    "timezone": {
                        "type": "string",
                        "example": "Timezone"
                    },
                    "profile_url": {
                        "type": "object",
                        "example": "{}"
                    }
                },
                "type": "object"
            }
        }
    }
}